{
  "name": "CodelessUi",
  "tagline": "A DOM-based php template engine",
  "body": "### About CodelessUi \r\nCodelessUi is a template engine for PHP that facilitates the separation of presentation code (HTML) from application code (PHP) – that is, a system of 100%-HTML markup without any traces of PHP code, nor any non-HTML codes mixing with HTML for revealing application content. It works by mapping application content to respective elements in a HTML template, PULLING available content from inside an application and PUSHING it into its frontend.\r\nAnd unlike some other PHP template engines, CodelessUi mixes no proprietary syntaxes with HTML codes – no you do not achieve code separation by discouraging inline PHP in HTML and yet introducing some foreign, proprietary, non-HTML and non-standard code into HTML.\r\n### Key Goals\r\nThe idea of CodelessUi development was largely driven by these goals: \r\n•\tFacilitate clean separation of presentation from application code.\r\n•\tStick with the available coding languages – PHP, HTML, CSS - that everyone is used to; do not create a new language or proprietary syntaxes like other template engines do.\r\n•\tOffer total control of templates from the backend as if there were no isolation.\r\n•\tMake it seamless for programmers and designers to deploy CodelessUi or even to undeploy when they choose to.\r\n•\tAchieve the big things without making it a big deal! So make only a few rules for it, and not a whole bunch of documentation.\r\n•\tAgain, make it as simple as possible.\r\n•\tMake it as free to use as possible.\r\n\r\n\r\n### Compare CodelessUi with Other Template Engines \r\nSmarty is one other engine following the \"Separate Programming Code from Presentation\" philosophy. In comparison with CodelessUi:\r\n\tSmarty has a learning curve owing to its use of a proprietary and non-standard syntaxes and code constructs. But CodelessUi has no such. CodelessUi leverages on your knowledge of PHP, CSS and HTML – languages that are standard\r\n\tA Smarty template cannot be used outside of the Smarty template engine. But CodelessUi templates are usable anywhere outside of the CodelessUi machine. This owes to the fact that templates for CodelessUi are no special files but plain markup files like HMTL.\r\n\tSmarty attempts to make its own version of native PHP functions available on template files while devoiding one of access to other PHP functions for User Interface manipulations. But CodelessUi takes no such approach. Your full logic for User Interface manipulation stands with all the power of PHP and CodelessUi simply hands you a UI element to manipulate. And every manipulation happens on the backend and not inline with markup.\r\n\r\n### CodelessUi Features\r\n•\tFacilitates clean separation of presentation from application code.\r\n•\tIt tolerates no invalid HMTL markup – owing to its use of PHP DOMDocument.\r\n•\tUses no proprietary syntaxes but leverages on available coding languages – PHP, HTML, CSS.\r\n•\tPHP for operation, HTML for templates, CSS-style of element selection (not CSS rules within PHP) to identify UI elements, and everything about XPath query for extended element selectors where CSS selectors runs out. XPath query will allow you to select the unknown parent of a known element whereas CSS selectors have no such feature. Using both on CodelessUi offers you the best of both worlds: the ultra-simple element selectors of CSS and the unlimited ability of XPath query.\r\n•\tOffers total control of template elements from the backend as if there were no isolation.\r\n•\tAbility to auto-generate UI elements or simply repeat them on the fly and create patterns.\r\n•\tAbility to include other local HTML files as subsets of the main template. This helps you add things like header and footer files or other inline template files on the fly.\r\n•\tAbility to URL--import elements of other HTML files as subsets or sub-elements in the main template.\r\n•\tAbility to decisively remove an element from the current template. You could use this feature where, for example, you do not want your sidebar to show on certain pages.\r\n•\tAbility to manipulate attributes.\r\n•\tAbility to re-render inserted content that contains HTML markup strings.\r\n•\tYou could save some markup string from the application’s Content Editor to a database, for example, and then, while assigning this markup string to CodelessUi for display, you could have even other content inserted into respective elements within the markup string.\r\n•\tAbility to extend functionality by setting value-handler functions.\r\n•\tFor example, where you want to join array elements as a single string before rendering, you’ll find the setValueHandler() function handy.\r\n•\tSeamless for programmers and designers to deploy or even to undeploy when they choose to.\r\n•\tWith few lines of code, you’ll be using CodelessUi on your already existing projects. And if you happen to be building one afresh, you’ll enjoy integration made easy with CodelessUi.\r\n•\tIntentionally made simple – but offering the full power of PHP on the backend to do just anything PHP can do.\r\n•\tConditional if-elses, string and array functions, do-while loops, for and foreach loops, and every other thing you know about PHP.\r\n•\tGiven CodelessUi, every Plain HTML template is a plug and play file for any PHP-based application.\r\n•\tFree to use, and always will be.\r\n\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}